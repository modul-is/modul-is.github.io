import{_ as i,r as l,o as d,c as a,a as e,b as t,d as o,e as s}from"./app-cd9150d0.js";const r={},c=s(`<h1 id="nette-form-with-custom-bs5-renderer" tabindex="-1"><a class="header-anchor" href="#nette-form-with-custom-bs5-renderer" aria-hidden="true">#</a> Nette form with custom BS5 renderer</h1><p>This library allows you to spend less time writing templates for Nette forms - it contains renderers for form, containers as well as all inputs</p><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting started</h2><p>Easiest way to create form is to create component which extends <code>FormComponent</code> class</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>class MyForm extends \\ModulIS\\Form\\FormComponent
{
	public function createComponentForm(): Form
	{
		$form = $this-&gt;getForm();
		
		...
		
		return $form;
	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you just add inputs to form, create <code>MyForm</code> component and all done!</p><h2 id="inputs" tabindex="-1"><a class="header-anchor" href="#inputs" aria-hidden="true">#</a> Inputs</h2><p>Form supports all of the default Nette inputs and adds new ones</p><ul><li><code>addLink()</code> - Button with link (eg. reset, go back buttons)</li><li><code>addWhisperer()</code> - select box with whisperer which filters options</li><li><code>addMultiWhisperer()</code> - same as whisperer, more options can be selected</li><li><code>addDuplicator()</code> - container which can be duplicated many times</li><li><code>addDependentSelect()</code> - select box that can change options via ajax based on change of another input(s)</li><li><code>addDependentMultiSelect()</code> - same as DependantSelect, but more options can be selected</li><li><code>addDate()</code> - date input, can limit min and max date</li></ul><h2 id="custom-settings" tabindex="-1"><a class="header-anchor" href="#custom-settings" aria-hidden="true">#</a> Custom settings</h2><h3 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> Form</h3>`,11),u=e("li",null,[e("code",null,"setTitle()"),t(" - add "),e("code",null,"card-header"),t(" div with title")],-1),p=e("li",null,[e("code",null,"setColor()"),t(" - set color of form")],-1),h=e("li",null,[e("code",null,"setAjax()"),t(" - form is submitted via ajax")],-1),m=e("li",null,[e("code",null,"addBox()"),t(" - all inputs added after this call will render in new card")],-1),b=e("code",null,"setFloatingLabel()",-1),_={href:"https://getbootstrap.com/docs/5.0/forms/floating-labels/",target:"_blank",rel:"noopener noreferrer"},f=e("li",null,[e("code",null,"setRenderInline()"),t(" - label and input are rendered each in separate row")],-1),v=e("li",null,[e("code",null,"setRenderManually()"),t(" - set manual render, template with same name as form is used (eg. file "),e("code",null,"MyForm.php"),t(" -> "),e("code",null,"myForm.latte"),t(")")],-1),x=e("h3",{id:"groups",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#groups","aria-hidden":"true"},"#"),t(" Groups")],-1),g={href:"https://getbootstrap.com/docs/5.0/components/card/",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,[t("Inputs are rendered in "),e("code",null,"card-body"),t(" div")],-1),k=e("p",null,[t("Submitters, links and buttons in "),e("code",null,"card-footer")],-1),S=e("h3",{id:"container",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),t(" Container")],-1),C=e("p",null,"Container works as standard Nette Continer and has these new features",-1),F=e("li",null,[e("code",null,"setId()"),t(" - add html id to outer div of container")],-1),T=e("code",null,"showCard()",-1),y={href:"https://getbootstrap.com/docs/5.0/components/card/",target:"_blank",rel:"noopener noreferrer"},I=e("li",null,[e("code",null,"setTitle()"),t(" - show title of container (only works when container is rendered as card)")],-1),L=e("li",null,[e("code",null,"setColor()"),t(" - set color of conatiner (only works when container is rendered as card)")],-1),B=e("h3",{id:"inputs-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inputs-1","aria-hidden":"true"},"#"),t(" Inputs")],-1),$=e("p",null,"Some inputs provide new features",-1),D=e("li",null,[e("code",null,"setIcon()"),t(" - add icon to input or button (Buttons, Links, Text inputs)")],-1),M=e("li",null,[e("code",null,"setColor()"),t(" - add color to input or button (Buttons, Links, Checkbox, Lists)")],-1),N=e("li",null,[e("code",null,"setTemplate()"),t(" - add custom latte template insted of basic render (All inputs)")],-1),A=e("code",null,"setPrepend()",-1),W={href:"https://getbootstrap.com/docs/5.0/forms/input-group/",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"setAppend()",-1),E={href:"https://getbootstrap.com/docs/5.0/forms/input-group/",target:"_blank",rel:"noopener noreferrer"},V=e("li",null,[e("code",null,"setRenderInline()"),t(" - render label and input each in separate row, overwrites "),e("code",null,"renderInline"),t(" setting from Form (All non-button inputs)")],-1),R=e("code",null,"setFloatingLabel()",-1),G={href:"https://getbootstrap.com/docs/5.0/forms/floating-labels/",target:"_blank",rel:"noopener noreferrer"},P=s("<li><code>setAutorenderSkip()</code> - skips rendering of input, eg. if input is rendered as part of another input with custom template (All inputs)</li><li><code>setTooltip()</code> - add icon with tooltip to input (Text inputs, Checkbox, Lists, Selec boxes)</li><li><code>setWrapClass()</code> - set class to outer div around label and input - overwrites basic <code>col-</code> class (Text inputs, Checkbox, Lists, Selec boxes)</li><li><code>setLabelWrapClass()</code> - set class to wrap div around label - overwrites basic <code>col-</code> class (Text inputs, Checkbox, Lists, Selec boxes)</li><li><code>setInputWrapClass()</code> - set class to wrap div around input - overwrites basic <code>col-</code> class (Text inputs, Checkbox, Lists, Selec boxes)</li>",5),z=s(`<h3 id="duplicator-example" tabindex="-1"><a class="header-anchor" href="#duplicator-example" aria-hidden="true">#</a> Duplicator example</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$duplicator = $form-&gt;addDuplicator(&#39;duplicator&#39;, function(\\ModulIS\\Form\\DuplicatorContainer $container)
{
	$container-&gt;addText(&#39;text&#39;, &#39;Text input&#39;);

	$container-&gt;addSubmit(&#39;del&#39;, &#39;Smazat&#39;);
}, 1);

$duplicator-&gt;addSubmit(&#39;add&#39;, &#39;PÅ™idat&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function q(H,J){const n=l("ExternalLinkIcon");return d(),a("div",null,[c,e("ul",null,[u,p,h,m,e("li",null,[b,t(" - inputs will be rendered with "),e("a",_,[t("floating labels"),o(n)])]),f,v]),x,e("p",null,[t("Form is rendered in BS5 "),e("a",g,[t("card"),o(n)]),t(" - each card represents one group")]),w,k,S,C,e("ul",null,[F,e("li",null,[T,t(" - show container as BS5 "),e("a",y,[t("card"),o(n)])]),I,L]),B,$,e("ul",null,[D,M,N,e("li",null,[A,t(" - adds prepend part to "),e("a",W,[t("input group"),o(n)]),t(" (Text inputs, Select boxes)")]),e("li",null,[j,t(" - adds append part to "),e("a",E,[t("input group"),o(n)]),t(" (Text inputs, Select boxes)")]),V,e("li",null,[R,t(" - input will be rendered with "),e("a",G,[t("floating labels"),o(n)]),t(" (Text inputs, Select box)")]),P]),z])}const O=i(r,[["render",q],["__file","index.html.vue"]]);export{O as default};
